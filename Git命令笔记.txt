【初始化仓库】
git init

【个人配置信息】
git config --list
git config --global user.name "Your Name"
git config --global user.email "email@example.com"

【创建文件】
mkdir 文件名

【文件夹路径】
cd 当前文件夹子文件夹路径

【新增文件】
git add "文件名"
git commit -m "描述"

【删除文件】
rm -rf 文件名
git rm 文件名
git commit -m "描述"

【下载仓库项目】
git clone 项目url地址

【没有权限】
在.git文件夹中找到config文件
# 将
[remote "origin"]
	url = https://github.com/用户名/仓库名.git
修改为：
[remote "origin"]
	url = https://用户名:密码@github.com/用户名/仓库名.git

【添加全部文件】
git add .

【生成密钥和公钥】
ssh-keygen -t rsa

【查看关联的远程库】
git remote -v
origin    git@github.com:michaelliao/learngit.git (fetch)
origin    git@github.com:michaelliao/learngit.git (push)

【再次关联远程库】
git remote add origin git@gitee.com:liaoxuefeng/learngit.git

【密钥路径】
C:\Users\Kirby\.ssh

【把本地仓库和远程仓库关联】
git remote add origin(本地仓库名) url地址

【推送到远程仓库】
git push origin(本地仓库名) master

【强制覆盖远程仓库】
git push origin master -f

git diff     diff=difference 查看修改了什么内容
git log      查看改动日志，可以加参数
$ git log --pretty=oneline

----------------------------------

添加远程库@important 重头戏！！

注意！执行下面操作时一定要在本地新建ssh，并且在github也新建ssh，具体操作请百度，不然git push的会报错

$ git remote add origin git@github.com:'你的github账号'/learngit.git

远程库的名字就是origin

$ git push -u origin master

成功~

从远程库克隆

$ git clone git@github.com:'你的github账号'/gitskills.git

五、分支合并的命令

创建并切换分支

$ git checkout -b dev

用git branch查看分支

$ git branch

切换分支

$ git checkout master

合并某个分支

$ git merge dev

删除废弃分支（合并后没用了）

$ git branch -d dev

解决冲突

用git log --graph可以查看合并图

用-ff表示禁用快速模式

$ git merge --no-ff -m "merge with no-ff" dev

--------------
已有项目?
cd existing_git_repo
git remote add origin git@gitee.com:kirby_yu/Hollywood_of_the_East_Client.git
git push -u origin master

git reset head --hard 本地仓库回滚
git ls-files 查看本地仓库内容

rm .git/index 清空暂存区文件
git rm --cached readme.txt 删除暂存区指定文件
